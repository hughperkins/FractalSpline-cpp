###############################################################################
# Makefile automatically generated by Code::Blocks IDE                        #
###############################################################################

# Project:          fractalspline
# Project filename: E:\dev\FSDev\fractalspline.cbp
# Compiler used:    GNU GCC Compiler

### Variables used in this Makefile
default_CC=mingw32-gcc.exe
default_CPP=mingw32-g++.exe
default_LD=mingw32-g++.exe
default_LIB=ar.exe
default_RESCOMP=windres.exe

### Compiler/linker options
default_GLOBAL_CFLAGS=
default_PROJECT_CFLAGS=  -DBUILD_DLL -DBUILDING_FRACTALSPLINE
default_GLOBAL_LDFLAGS=
default_PROJECT_LDFLAGS= -s
default_GLOBAL_INCS= -IE:/bin/CodeBlocks/include -IE:/bin/Microsoft\ Platform\ SDK\ for\ Windows\ XP\ SP2/Include
default_PROJECT_INCS= -I../osmpdevkit-msvc/mathgl-pp/include
default_GLOBAL_LIBDIRS= -LE:/bin/CodeBlocks/lib
default_PROJECT_LIBDIRS=
default_GLOBAL_LIBS=
default_PROJECT_LIBS=

### Targets compiler flags
default_CFLAGS= $(default_PROJECT_CFLAGS) $(default_GLOBAL_CFLAGS)

### Targets linker flags
default_LDFLAGS= $(default_PROJECT_LDFLAGS) $(default_GLOBAL_LDFLAGS)

### Targets include directories
default_INCS= $(default_PROJECT_INCS) $(default_GLOBAL_INCS)

### Targets library directories
default_LIBDIRS= $(default_PROJECT_LIBDIRS) $(default_GLOBAL_LIBDIRS)

### Targets libraries
default_LIBS= $(default_PROJECT_LIBS) $(default_GLOBAL_LIBS)

###############################################################################
#         You shouldn't need to modify anything beyond this point             #
###############################################################################

### Resources used in this Makefile
default_RESOURCE=

### Objects used in this Makefile
default_OBJS=.objs/CrossSection.o .objs/ExtrusionPath.o .objs/LinearExtrusionPath.o .objs/LinearPrimitiveImpl.o .objs/Primitive.o .objs/PrimitiveBox.o .objs/PrimitiveBoxImpl.o .objs/PrimitiveCylinder.o .objs/PrimitiveCylinderImpl.o .objs/PrimitiveImpl.o .objs/PrimitivePrism.o .objs/PrimitivePrismImpl.o .objs/PrimitiveRing.o .objs/PrimitiveRingImpl.o .objs/PrimitiveTorus.o .objs/PrimitiveTorusImpl.o .objs/PrimitiveTube.o .objs/PrimitiveTubeImpl.o .objs/RotationalExtrusionPath.o .objs/RotationalPrimitiveImpl.o 
default_LINKOBJS=$(default_OBJS)
default_DEPS=.deps/CrossSection.d .deps/ExtrusionPath.d .deps/LinearExtrusionPath.d .deps/LinearPrimitiveImpl.d .deps/Primitive.d .deps/PrimitiveBox.d .deps/PrimitiveBoxImpl.d .deps/PrimitiveCylinder.d .deps/PrimitiveCylinderImpl.d .deps/PrimitiveImpl.d .deps/PrimitivePrism.d .deps/PrimitivePrismImpl.d .deps/PrimitiveRing.d .deps/PrimitiveRingImpl.d .deps/PrimitiveTorus.d .deps/PrimitiveTorusImpl.d .deps/PrimitiveTube.d .deps/PrimitiveTubeImpl.d .deps/RotationalExtrusionPath.d .deps/RotationalPrimitiveImpl.d 

### The targets of this project
default_BIN=libfractalspline.dll
default_STATIC_LIB=libfractalspline.a
default_LIB_DEF=libfractalspline.def

.PHONY: all all-before all-custom all-after clean clean-custom distclean distclean-custom depend_default default-before default-after 

all: all-before default all-after


dist:
	@zip fractalspline.cbp.zip fractalspline.cbp CBMakefile CrossSection.cpp CrossSection.h ExtrusionPath.cpp ExtrusionPath.h LinearExtrusionPath.cpp LinearExtrusionPath.h LinearPrimitiveImpl.cpp LinearPrimitiveImpl.h Primitive.cpp Primitive.h PrimitiveBox.cpp PrimitiveBox.h PrimitiveBoxImpl.cpp PrimitiveBoxImpl.h PrimitiveBoxInterface.h PrimitiveCylinder.cpp PrimitiveCylinder.h PrimitiveCylinderImpl.cpp PrimitiveCylinderImpl.h PrimitiveImpl.cpp PrimitiveImpl.h PrimitiveInterface.h PrimitivePrism.cpp PrimitivePrism.h PrimitivePrismImpl.cpp PrimitivePrismImpl.h PrimitiveRing.cpp PrimitiveRing.h PrimitiveRingImpl.cpp PrimitiveRingImpl.h PrimitiveTorus.cpp PrimitiveTorus.h PrimitiveTorusImpl.cpp PrimitiveTorusImpl.h PrimitiveTube.cpp PrimitiveTube.h PrimitiveTubeImpl.cpp PrimitiveTubeImpl.h RendererCallbacks.h RendererCallbacksOpenGL.h RotationalExtrusionPath.cpp RotationalExtrusionPath.h RotationalPrimitiveImpl.cpp RotationalPrimitiveImpl.h fsdllsymbols.h 

clean_default:
	@echo Cleaning target "default"...
	@$(RM) $(default_BIN) $(default_OBJS) $(default_RESOURCE) $(default_STATIC_LIB) $(default_LIB_DEF) 

distclean_default:
	@echo Dist-cleaning target "default"...
	@$(RM) $(default_BIN) $(default_OBJS) $(default_DEPS) $(default_RESOURCE) $(default_STATIC_LIB) $(default_LIB_DEF) 

clean: clean_default 

distclean: distclean_default 

depend_default_DIRS:
	-@if not exist ".deps\." mkdir ".deps"

depend_default: depend_default_DIRS $(default_DEPS)

depend: depend_default

default_DIRS:
	-@if not exist ".objs\." mkdir ".objs"

default: depend_default default_DIRS default-before $(default_BIN) default-after

$(default_BIN): $(default_LINKOBJS) $(default_RESOURCE)
	@echo Linking shared library "libfractalspline.dll"...
	@$(default_LD) -shared -Wl,--output-def=$(default_LIB_DEF) -Wl,--out-implib=$(default_STATIC_LIB) -Wl,--dll $(default_LIBDIRS) $(default_LINKOBJS) $(default_RESOURCE) -o $(default_BIN) $(default_LDFLAGS) $(default_LIBS)


.deps/CrossSection.d: CrossSection.cpp
	@echo Calculating dependencies for "CrossSection.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/CrossSection.d -MT .objs/CrossSection.o $(default_INCS) CrossSection.cpp

.objs/CrossSection.o: .deps/CrossSection.d
	@echo Compiling "CrossSection.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c CrossSection.cpp -o .objs/CrossSection.o

.deps/ExtrusionPath.d: ExtrusionPath.cpp
	@echo Calculating dependencies for "ExtrusionPath.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/ExtrusionPath.d -MT .objs/ExtrusionPath.o $(default_INCS) ExtrusionPath.cpp

.objs/ExtrusionPath.o: .deps/ExtrusionPath.d
	@echo Compiling "ExtrusionPath.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c ExtrusionPath.cpp -o .objs/ExtrusionPath.o

.deps/LinearExtrusionPath.d: LinearExtrusionPath.cpp
	@echo Calculating dependencies for "LinearExtrusionPath.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/LinearExtrusionPath.d -MT .objs/LinearExtrusionPath.o $(default_INCS) LinearExtrusionPath.cpp

.objs/LinearExtrusionPath.o: .deps/LinearExtrusionPath.d
	@echo Compiling "LinearExtrusionPath.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c LinearExtrusionPath.cpp -o .objs/LinearExtrusionPath.o

.deps/LinearPrimitiveImpl.d: LinearPrimitiveImpl.cpp
	@echo Calculating dependencies for "LinearPrimitiveImpl.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/LinearPrimitiveImpl.d -MT .objs/LinearPrimitiveImpl.o $(default_INCS) LinearPrimitiveImpl.cpp

.objs/LinearPrimitiveImpl.o: .deps/LinearPrimitiveImpl.d
	@echo Compiling "LinearPrimitiveImpl.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c LinearPrimitiveImpl.cpp -o .objs/LinearPrimitiveImpl.o

.deps/Primitive.d: Primitive.cpp
	@echo Calculating dependencies for "Primitive.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/Primitive.d -MT .objs/Primitive.o $(default_INCS) Primitive.cpp

.objs/Primitive.o: .deps/Primitive.d
	@echo Compiling "Primitive.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c Primitive.cpp -o .objs/Primitive.o

.deps/PrimitiveBox.d: PrimitiveBox.cpp
	@echo Calculating dependencies for "PrimitiveBox.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/PrimitiveBox.d -MT .objs/PrimitiveBox.o $(default_INCS) PrimitiveBox.cpp

.objs/PrimitiveBox.o: .deps/PrimitiveBox.d
	@echo Compiling "PrimitiveBox.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c PrimitiveBox.cpp -o .objs/PrimitiveBox.o

.deps/PrimitiveBoxImpl.d: PrimitiveBoxImpl.cpp
	@echo Calculating dependencies for "PrimitiveBoxImpl.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/PrimitiveBoxImpl.d -MT .objs/PrimitiveBoxImpl.o $(default_INCS) PrimitiveBoxImpl.cpp

.objs/PrimitiveBoxImpl.o: .deps/PrimitiveBoxImpl.d
	@echo Compiling "PrimitiveBoxImpl.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c PrimitiveBoxImpl.cpp -o .objs/PrimitiveBoxImpl.o

.deps/PrimitiveCylinder.d: PrimitiveCylinder.cpp
	@echo Calculating dependencies for "PrimitiveCylinder.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/PrimitiveCylinder.d -MT .objs/PrimitiveCylinder.o $(default_INCS) PrimitiveCylinder.cpp

.objs/PrimitiveCylinder.o: .deps/PrimitiveCylinder.d
	@echo Compiling "PrimitiveCylinder.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c PrimitiveCylinder.cpp -o .objs/PrimitiveCylinder.o

.deps/PrimitiveCylinderImpl.d: PrimitiveCylinderImpl.cpp
	@echo Calculating dependencies for "PrimitiveCylinderImpl.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/PrimitiveCylinderImpl.d -MT .objs/PrimitiveCylinderImpl.o $(default_INCS) PrimitiveCylinderImpl.cpp

.objs/PrimitiveCylinderImpl.o: .deps/PrimitiveCylinderImpl.d
	@echo Compiling "PrimitiveCylinderImpl.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c PrimitiveCylinderImpl.cpp -o .objs/PrimitiveCylinderImpl.o

.deps/PrimitiveImpl.d: PrimitiveImpl.cpp
	@echo Calculating dependencies for "PrimitiveImpl.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/PrimitiveImpl.d -MT .objs/PrimitiveImpl.o $(default_INCS) PrimitiveImpl.cpp

.objs/PrimitiveImpl.o: .deps/PrimitiveImpl.d
	@echo Compiling "PrimitiveImpl.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c PrimitiveImpl.cpp -o .objs/PrimitiveImpl.o

.deps/PrimitivePrism.d: PrimitivePrism.cpp
	@echo Calculating dependencies for "PrimitivePrism.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/PrimitivePrism.d -MT .objs/PrimitivePrism.o $(default_INCS) PrimitivePrism.cpp

.objs/PrimitivePrism.o: .deps/PrimitivePrism.d
	@echo Compiling "PrimitivePrism.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c PrimitivePrism.cpp -o .objs/PrimitivePrism.o

.deps/PrimitivePrismImpl.d: PrimitivePrismImpl.cpp
	@echo Calculating dependencies for "PrimitivePrismImpl.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/PrimitivePrismImpl.d -MT .objs/PrimitivePrismImpl.o $(default_INCS) PrimitivePrismImpl.cpp

.objs/PrimitivePrismImpl.o: .deps/PrimitivePrismImpl.d
	@echo Compiling "PrimitivePrismImpl.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c PrimitivePrismImpl.cpp -o .objs/PrimitivePrismImpl.o

.deps/PrimitiveRing.d: PrimitiveRing.cpp
	@echo Calculating dependencies for "PrimitiveRing.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/PrimitiveRing.d -MT .objs/PrimitiveRing.o $(default_INCS) PrimitiveRing.cpp

.objs/PrimitiveRing.o: .deps/PrimitiveRing.d
	@echo Compiling "PrimitiveRing.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c PrimitiveRing.cpp -o .objs/PrimitiveRing.o

.deps/PrimitiveRingImpl.d: PrimitiveRingImpl.cpp
	@echo Calculating dependencies for "PrimitiveRingImpl.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/PrimitiveRingImpl.d -MT .objs/PrimitiveRingImpl.o $(default_INCS) PrimitiveRingImpl.cpp

.objs/PrimitiveRingImpl.o: .deps/PrimitiveRingImpl.d
	@echo Compiling "PrimitiveRingImpl.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c PrimitiveRingImpl.cpp -o .objs/PrimitiveRingImpl.o

.deps/PrimitiveTorus.d: PrimitiveTorus.cpp
	@echo Calculating dependencies for "PrimitiveTorus.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/PrimitiveTorus.d -MT .objs/PrimitiveTorus.o $(default_INCS) PrimitiveTorus.cpp

.objs/PrimitiveTorus.o: .deps/PrimitiveTorus.d
	@echo Compiling "PrimitiveTorus.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c PrimitiveTorus.cpp -o .objs/PrimitiveTorus.o

.deps/PrimitiveTorusImpl.d: PrimitiveTorusImpl.cpp
	@echo Calculating dependencies for "PrimitiveTorusImpl.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/PrimitiveTorusImpl.d -MT .objs/PrimitiveTorusImpl.o $(default_INCS) PrimitiveTorusImpl.cpp

.objs/PrimitiveTorusImpl.o: .deps/PrimitiveTorusImpl.d
	@echo Compiling "PrimitiveTorusImpl.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c PrimitiveTorusImpl.cpp -o .objs/PrimitiveTorusImpl.o

.deps/PrimitiveTube.d: PrimitiveTube.cpp
	@echo Calculating dependencies for "PrimitiveTube.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/PrimitiveTube.d -MT .objs/PrimitiveTube.o $(default_INCS) PrimitiveTube.cpp

.objs/PrimitiveTube.o: .deps/PrimitiveTube.d
	@echo Compiling "PrimitiveTube.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c PrimitiveTube.cpp -o .objs/PrimitiveTube.o

.deps/PrimitiveTubeImpl.d: PrimitiveTubeImpl.cpp
	@echo Calculating dependencies for "PrimitiveTubeImpl.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/PrimitiveTubeImpl.d -MT .objs/PrimitiveTubeImpl.o $(default_INCS) PrimitiveTubeImpl.cpp

.objs/PrimitiveTubeImpl.o: .deps/PrimitiveTubeImpl.d
	@echo Compiling "PrimitiveTubeImpl.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c PrimitiveTubeImpl.cpp -o .objs/PrimitiveTubeImpl.o

.deps/RotationalExtrusionPath.d: RotationalExtrusionPath.cpp
	@echo Calculating dependencies for "RotationalExtrusionPath.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/RotationalExtrusionPath.d -MT .objs/RotationalExtrusionPath.o $(default_INCS) RotationalExtrusionPath.cpp

.objs/RotationalExtrusionPath.o: .deps/RotationalExtrusionPath.d
	@echo Compiling "RotationalExtrusionPath.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c RotationalExtrusionPath.cpp -o .objs/RotationalExtrusionPath.o

.deps/RotationalPrimitiveImpl.d: RotationalPrimitiveImpl.cpp
	@echo Calculating dependencies for "RotationalPrimitiveImpl.cpp"...
	@$(default_CPP) -MM $(default_CFLAGS) -MF .deps/RotationalPrimitiveImpl.d -MT .objs/RotationalPrimitiveImpl.o $(default_INCS) RotationalPrimitiveImpl.cpp

.objs/RotationalPrimitiveImpl.o: .deps/RotationalPrimitiveImpl.d
	@echo Compiling "RotationalPrimitiveImpl.cpp"...
	@$(default_CPP) $(default_CFLAGS) $(default_INCS) -c RotationalPrimitiveImpl.cpp -o .objs/RotationalPrimitiveImpl.o



